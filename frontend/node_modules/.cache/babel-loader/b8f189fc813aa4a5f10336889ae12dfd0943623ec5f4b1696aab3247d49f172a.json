{"ast":null,"code":"import * as api from '../../api/employeeApi';\n\n// action types\nexport const FETCH_EMPLOYEES = 'FETCH_EMPLOYEES';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_LOADING = 'SET_LOADING';\n\n// action creators\nexport const fetchEmployees = () => async dispatch => {\n  dispatch({\n    type: SET_LOADING,\n    payload: true\n  });\n  try {\n    const data = await api.getAll();\n    dispatch({\n      type: FETCH_EMPLOYEES,\n      payload: data\n    });\n    dispatch({\n      type: SET_ERROR,\n      payload: null\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_ERROR,\n      payload: err.message || 'Server error'\n    });\n  } finally {\n    dispatch({\n      type: SET_LOADING,\n      payload: false\n    });\n  }\n};\nexport const createEmployee = emp => async dispatch => {\n  dispatch({\n    type: SET_LOADING,\n    payload: true\n  });\n  try {\n    const data = await api.create(emp);\n    // refetch\n    const list = await api.getAll();\n    dispatch({\n      type: FETCH_EMPLOYEES,\n      payload: list\n    });\n    dispatch({\n      type: SET_ERROR,\n      payload: null\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: SET_ERROR,\n      payload: err.message || 'Server error'\n    });\n    throw err;\n  } finally {\n    dispatch({\n      type: SET_LOADING,\n      payload: false\n    });\n  }\n};\nexport const updateEmployee = (id, emp) => async dispatch => {\n  dispatch({\n    type: SET_LOADING,\n    payload: true\n  });\n  try {\n    const data = await api.update(id, emp);\n    const list = await api.getAll();\n    dispatch({\n      type: FETCH_EMPLOYEES,\n      payload: list\n    });\n    dispatch({\n      type: SET_ERROR,\n      payload: null\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: SET_ERROR,\n      payload: err.message || 'Server error'\n    });\n    throw err;\n  } finally {\n    dispatch({\n      type: SET_LOADING,\n      payload: false\n    });\n  }\n};\nexport const deleteEmployee = id => async dispatch => {\n  dispatch({\n    type: SET_LOADING,\n    payload: true\n  });\n  try {\n    await api.remove(id);\n    const list = await api.getAll();\n    dispatch({\n      type: FETCH_EMPLOYEES,\n      payload: list\n    });\n    dispatch({\n      type: SET_ERROR,\n      payload: null\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_ERROR,\n      payload: err.message || 'Server error'\n    });\n  } finally {\n    dispatch({\n      type: SET_LOADING,\n      payload: false\n    });\n  }\n};","map":{"version":3,"names":["api","FETCH_EMPLOYEES","SET_ERROR","SET_LOADING","fetchEmployees","dispatch","type","payload","data","getAll","err","message","createEmployee","emp","create","list","updateEmployee","id","update","deleteEmployee","remove"],"sources":["/home/amir/employee-crud/frontend/src/store/employees/employeesActions.js"],"sourcesContent":["import * as api from '../../api/employeeApi';\n\n// action types\nexport const FETCH_EMPLOYEES = 'FETCH_EMPLOYEES';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_LOADING = 'SET_LOADING';\n\n// action creators\nexport const fetchEmployees = () => async (dispatch) => {\n  dispatch({ type: SET_LOADING, payload: true });\n  try {\n    const data = await api.getAll();\n    dispatch({ type: FETCH_EMPLOYEES, payload: data });\n    dispatch({ type: SET_ERROR, payload: null });\n  } catch (err) {\n    dispatch({ type: SET_ERROR, payload: err.message || 'Server error' });\n  } finally {\n    dispatch({ type: SET_LOADING, payload: false });\n  }\n};\n\nexport const createEmployee = (emp) => async (dispatch) => {\n  dispatch({ type: SET_LOADING, payload: true });\n  try {\n    const data = await api.create(emp);\n    // refetch\n    const list = await api.getAll();\n    dispatch({ type: FETCH_EMPLOYEES, payload: list });\n    dispatch({ type: SET_ERROR, payload: null });\n    return data;\n  } catch (err) {\n    dispatch({ type: SET_ERROR, payload: err.message || 'Server error' });\n    throw err;\n  } finally {\n    dispatch({ type: SET_LOADING, payload: false });\n  }\n};\n\nexport const updateEmployee = (id, emp) => async (dispatch) => {\n  dispatch({ type: SET_LOADING, payload: true });\n  try {\n    const data = await api.update(id, emp);\n    const list = await api.getAll();\n    dispatch({ type: FETCH_EMPLOYEES, payload: list });\n    dispatch({ type: SET_ERROR, payload: null });\n    return data;\n  } catch (err) {\n    dispatch({ type: SET_ERROR, payload: err.message || 'Server error' });\n    throw err;\n  } finally {\n    dispatch({ type: SET_LOADING, payload: false });\n  }\n};\n\nexport const deleteEmployee = (id) => async (dispatch) => {\n  dispatch({ type: SET_LOADING, payload: true });\n  try {\n    await api.remove(id);\n    const list = await api.getAll();\n    dispatch({ type: FETCH_EMPLOYEES, payload: list });\n    dispatch({ type: SET_ERROR, payload: null });\n  } catch (err) {\n    dispatch({ type: SET_ERROR, payload: err.message || 'Server error' });\n  } finally {\n    dispatch({ type: SET_LOADING, payload: false });\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}