{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:4000/api';\nconst handleResponse = async res => {\n  const contentType = res.headers.get('content-type') || '';\n  const body = contentType.includes('application/json') ? await res.json() : await res.text();\n  if (!res.ok) {\n    const errMsg = body && body.error ? body.error : body;\n    const details = body && body.details ? body.details : undefined;\n    const err = new Error(errMsg || 'API error');\n    err.details = details;\n    err.status = res.status;\n    throw err;\n  }\n  return body;\n};\nexport const getAll = async () => {\n  const res = await fetch(`${API_BASE}/employee`);\n  return handleResponse(res);\n};\nexport const getById = async id => {\n  const res = await fetch(`${API_BASE}/employee/${id}`);\n  return handleResponse(res);\n};\nexport const create = async payload => {\n  const res = await fetch(`${API_BASE}/employee`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  return handleResponse(res);\n};\nexport const update = async (id, payload) => {\n  const res = await fetch(`${API_BASE}/employee/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  return handleResponse(res);\n};\nexport const remove = async id => {\n  const res = await fetch(`${API_BASE}/employee/${id}`, {\n    method: 'DELETE'\n  });\n  return handleResponse(res);\n};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_BASE","handleResponse","res","contentType","headers","get","body","includes","json","text","ok","errMsg","error","details","undefined","err","Error","status","getAll","fetch","getById","id","create","payload","method","JSON","stringify","update","remove"],"sources":["/home/amir/employee-crud/frontend/src/api/employeeApi.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:4000/api';\n\nconst handleResponse = async (res) => {\n  const contentType = res.headers.get('content-type') || '';\n  const body = contentType.includes('application/json') ? await res.json() : await res.text();\n  if (!res.ok) {\n    const errMsg = body && body.error ? body.error : body;\n    const details = body && body.details ? body.details : undefined;\n    const err = new Error(errMsg || 'API error');\n    err.details = details;\n    err.status = res.status;\n    throw err;\n  }\n  return body;\n};\n\nexport const getAll = async () => {\n  const res = await fetch(`${API_BASE}/employee`);\n  return handleResponse(res);\n};\n\nexport const getById = async (id) => {\n  const res = await fetch(`${API_BASE}/employee/${id}`);\n  return handleResponse(res);\n};\n\nexport const create = async (payload) => {\n  const res = await fetch(`${API_BASE}/employee`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload),\n  });\n  return handleResponse(res);\n};\n\nexport const update = async (id, payload) => {\n  const res = await fetch(`${API_BASE}/employee/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload),\n  });\n  return handleResponse(res);\n};\n\nexport const remove = async (id) => {\n  const res = await fetch(`${API_BASE}/employee/${id}`, { method: 'DELETE' });\n  return handleResponse(res);\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,2BAA2B;AAE9E,MAAMC,cAAc,GAAG,MAAOC,GAAG,IAAK;EACpC,MAAMC,WAAW,GAAGD,GAAG,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE;EACzD,MAAMC,IAAI,GAAGH,WAAW,CAACI,QAAQ,CAAC,kBAAkB,CAAC,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAC3F,IAAI,CAACP,GAAG,CAACQ,EAAE,EAAE;IACX,MAAMC,MAAM,GAAGL,IAAI,IAAIA,IAAI,CAACM,KAAK,GAAGN,IAAI,CAACM,KAAK,GAAGN,IAAI;IACrD,MAAMO,OAAO,GAAGP,IAAI,IAAIA,IAAI,CAACO,OAAO,GAAGP,IAAI,CAACO,OAAO,GAAGC,SAAS;IAC/D,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACL,MAAM,IAAI,WAAW,CAAC;IAC5CI,GAAG,CAACF,OAAO,GAAGA,OAAO;IACrBE,GAAG,CAACE,MAAM,GAAGf,GAAG,CAACe,MAAM;IACvB,MAAMF,GAAG;EACX;EACA,OAAOT,IAAI;AACb,CAAC;AAED,OAAO,MAAMY,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMhB,GAAG,GAAG,MAAMiB,KAAK,CAAC,GAAGtB,QAAQ,WAAW,CAAC;EAC/C,OAAOI,cAAc,CAACC,GAAG,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMkB,OAAO,GAAG,MAAOC,EAAE,IAAK;EACnC,MAAMnB,GAAG,GAAG,MAAMiB,KAAK,CAAC,GAAGtB,QAAQ,aAAawB,EAAE,EAAE,CAAC;EACrD,OAAOpB,cAAc,CAACC,GAAG,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMoB,MAAM,GAAG,MAAOC,OAAO,IAAK;EACvC,MAAMrB,GAAG,GAAG,MAAMiB,KAAK,CAAC,GAAGtB,QAAQ,WAAW,EAAE;IAC9C2B,MAAM,EAAE,MAAM;IACdpB,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CE,IAAI,EAAEmB,IAAI,CAACC,SAAS,CAACH,OAAO;EAC9B,CAAC,CAAC;EACF,OAAOtB,cAAc,CAACC,GAAG,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMyB,MAAM,GAAG,MAAAA,CAAON,EAAE,EAAEE,OAAO,KAAK;EAC3C,MAAMrB,GAAG,GAAG,MAAMiB,KAAK,CAAC,GAAGtB,QAAQ,aAAawB,EAAE,EAAE,EAAE;IACpDG,MAAM,EAAE,KAAK;IACbpB,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CE,IAAI,EAAEmB,IAAI,CAACC,SAAS,CAACH,OAAO;EAC9B,CAAC,CAAC;EACF,OAAOtB,cAAc,CAACC,GAAG,CAAC;AAC5B,CAAC;AAED,OAAO,MAAM0B,MAAM,GAAG,MAAOP,EAAE,IAAK;EAClC,MAAMnB,GAAG,GAAG,MAAMiB,KAAK,CAAC,GAAGtB,QAAQ,aAAawB,EAAE,EAAE,EAAE;IAAEG,MAAM,EAAE;EAAS,CAAC,CAAC;EAC3E,OAAOvB,cAAc,CAACC,GAAG,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}